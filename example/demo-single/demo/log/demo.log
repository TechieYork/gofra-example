[DEBUG][2018-04-05T21:42:45.868656][demo][seelog_interceptor.go:42][GofraServerInterceptorFunc] => context=context.Background.WithCancel.WithCancel.WithValue(peer.peerKey{}, &peer.Peer{Addr:(*net.TCPAddr)(0xc4201b8000), AuthInfo:credentials.AuthInfo(nil)}).WithValue(transport.streamKey{}, <stream: 0xc420212280, /common.health.check.HealthCheckService/HealthCheck>).WithValue(metadata.mdIncomingKey{}, metadata.MD{":authority":[]string{"localhost:58888"}, "user-agent":[]string{"grpc-go/1.8.2"}, "x-b3-spanid":[]string{"6f5e09ed3b0f2c1a"}, "x-b3-sampled":[]string{"1"}, "x-b3-flags":[]string{"0"}, "x-b3-traceid":[]string{"0fae9351189d44634327271ffdb499a5"}}).WithValue(opentracing.contextKey{}, &zipkintracer.spanImpl{tracer:(*zipkintracer.tracerImpl)(0xc4200f0c00), event:(func(zipkintracer.SpanEvent))(nil), observer:otobserver.SpanObserver(nil), Mutex:sync.Mutex{state:0, sema:0x0}, raw:zipkintracer.RawSpan{Context:zipkintracer.SpanContext{TraceID:types.TraceID{High:0xfae9351189d4463, Low:0x4327271ffdb499a5}, SpanID:0x6f5e09ed3b0f2c1a, Sampled:true, Baggage:map[string]string(nil), ParentSpanID:(*uint64)(nil), Flags:0x2, Owner:false}, Operation:"/common.health.check.HealthCheckService/HealthCheck", Start:time.Time{wall:0xbea9a7d573c5f977, ext:2438441564, loc:(*time.Location)(0xdfc0a0)}, Duration:70362, Tags:opentracing.Tags{"component":"gRPC"}, Logs:[]opentracing.LogRecord(nil)}, numDroppedLogs:0, Endpoint:(*zipkincore.Endpoint)(nil)}), req=message:"ping" , handle success!!! reply:
[DEBUG][2018-04-05T21:42:45.869117][demo_test][seelog_interceptor.go:26][GofraClientInterceptorFunc] => context=context.Background.WithValue(metadata.mdOutgoingKey{}, metadata.MD{"x-b3-traceid":[]string{"0fae9351189d44634327271ffdb499a5"}, "x-b3-spanid":[]string{"6f5e09ed3b0f2c1a"}, "x-b3-sampled":[]string{"1"}, "x-b3-flags":[]string{"0"}}).WithValue(opentracing.contextKey{}, &zipkintracer.spanImpl{tracer:(*zipkintracer.tracerImpl)(0xc42015c700), event:(func(zipkintracer.SpanEvent))(nil), observer:otobserver.SpanObserver(nil), Mutex:sync.Mutex{state:0, sema:0x0}, raw:zipkintracer.RawSpan{Context:zipkintracer.SpanContext{TraceID:types.TraceID{High:0xfae9351189d4463, Low:0x4327271ffdb499a5}, SpanID:0x6f5e09ed3b0f2c1a, Sampled:true, Baggage:map[string]string(nil), ParentSpanID:(*uint64)(nil), Flags:0x8, Owner:true}, Operation:"/common.health.check.HealthCheckService/HealthCheck", Start:time.Time{wall:0xbea9a7d573a0002c, ext:6829243, loc:(*time.Location)(0xcdd0a0)}, Duration:3017365, Tags:opentracing.Tags{"component":"gRPC"}, Logs:[]opentracing.LogRecord(nil)}, numDroppedLogs:0, Endpoint:(*zipkincore.Endpoint)(nil)}), req=message:"ping" , invoke success!!! reply:
[DEBUG][2018-04-05T22:26:12.689318][demo][seelog_interceptor.go:42][GofraServerInterceptorFunc] => context=context.Background.WithCancel.WithCancel.WithValue(peer.peerKey{}, &peer.Peer{Addr:(*net.TCPAddr)(0xc4201df020), AuthInfo:credentials.AuthInfo(nil)}).WithValue(transport.streamKey{}, <stream: 0xc4200ad680, /common.health.check.HealthCheckService/HealthCheck>).WithValue(metadata.mdIncomingKey{}, metadata.MD{"x-b3-traceid":[]string{"38421bf5a60211660c11592daed077df"}, "x-b3-spanid":[]string{"47f71b36854e3dc3"}, "x-b3-sampled":[]string{"1"}, "x-b3-flags":[]string{"0"}, ":authority":[]string{"localhost:58888"}, "user-agent":[]string{"grpc-go/1.8.2"}}).WithValue(opentracing.contextKey{}, &zipkintracer.spanImpl{tracer:(*zipkintracer.tracerImpl)(0xc4200f0c00), event:(func(zipkintracer.SpanEvent))(nil), observer:otobserver.SpanObserver(nil), Mutex:sync.Mutex{state:0, sema:0x0}, raw:zipkintracer.RawSpan{Context:zipkintracer.SpanContext{TraceID:types.TraceID{High:0x38421bf5a6021166, Low:0xc11592daed077df}, SpanID:0x47f71b36854e3dc3, Sampled:true, Baggage:map[string]string(nil), ParentSpanID:(*uint64)(nil), Flags:0x2, Owner:false}, Operation:"/common.health.check.HealthCheckService/HealthCheck", Start:time.Time{wall:0xbea9aa612915d59a, ext:2609259125865, loc:(*time.Location)(0xdfc0a0)}, Duration:57369, Tags:opentracing.Tags{"component":"gRPC"}, Logs:[]opentracing.LogRecord(nil)}, numDroppedLogs:0, Endpoint:(*zipkincore.Endpoint)(nil)}), req=message:"ping" , handle success!!! reply:
