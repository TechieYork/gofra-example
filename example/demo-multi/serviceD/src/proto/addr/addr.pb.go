// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/proto/addr/addr.proto

/*
Package tencent_user_addr is a generated protocol buffer package.

It is generated from these files:
	src/proto/addr/addr.proto

It has these top-level messages:
	AddAddrRequest
	AddAddrResponse
*/
package tencent_user_addr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddAddrRequest struct {
	Add string `protobuf:"bytes,1,opt,name=add" json:"add,omitempty"`
}

func (m *AddAddrRequest) Reset()                    { *m = AddAddrRequest{} }
func (m *AddAddrRequest) String() string            { return proto.CompactTextString(m) }
func (*AddAddrRequest) ProtoMessage()               {}
func (*AddAddrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddAddrRequest) GetAdd() string {
	if m != nil {
		return m.Add
	}
	return ""
}

type AddAddrResponse struct {
	Addr string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
}

func (m *AddAddrResponse) Reset()                    { *m = AddAddrResponse{} }
func (m *AddAddrResponse) String() string            { return proto.CompactTextString(m) }
func (*AddAddrResponse) ProtoMessage()               {}
func (*AddAddrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddAddrResponse) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func init() {
	proto.RegisterType((*AddAddrRequest)(nil), "tencent.user.addr.AddAddrRequest")
	proto.RegisterType((*AddAddrResponse)(nil), "tencent.user.addr.AddAddrResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AddrService service

type AddrServiceClient interface {
	// Sends a greeting
	AddAddr(ctx context.Context, in *AddAddrRequest, opts ...grpc.CallOption) (*AddAddrResponse, error)
}

type addrServiceClient struct {
	cc *grpc.ClientConn
}

func NewAddrServiceClient(cc *grpc.ClientConn) AddrServiceClient {
	return &addrServiceClient{cc}
}

func (c *addrServiceClient) AddAddr(ctx context.Context, in *AddAddrRequest, opts ...grpc.CallOption) (*AddAddrResponse, error) {
	out := new(AddAddrResponse)
	err := grpc.Invoke(ctx, "/tencent.user.addr.AddrService/AddAddr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AddrService service

type AddrServiceServer interface {
	// Sends a greeting
	AddAddr(context.Context, *AddAddrRequest) (*AddAddrResponse, error)
}

func RegisterAddrServiceServer(s *grpc.Server, srv AddrServiceServer) {
	s.RegisterService(&_AddrService_serviceDesc, srv)
}

func _AddrService_AddAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrServiceServer).AddAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tencent.user.addr.AddrService/AddAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrServiceServer).AddAddr(ctx, req.(*AddAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddrService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tencent.user.addr.AddrService",
	HandlerType: (*AddrServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAddr",
			Handler:    _AddrService_AddAddr_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/proto/addr/addr.proto",
}

func init() { proto.RegisterFile("src/proto/addr/addr.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x2e, 0x4a, 0xd6,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0x4c, 0x49, 0x29, 0x02, 0x13, 0x7a, 0x60, 0xbe, 0x90,
	0x60, 0x49, 0x6a, 0x5e, 0x72, 0x6a, 0x5e, 0x89, 0x5e, 0x69, 0x71, 0x6a, 0x91, 0x1e, 0x48, 0x42,
	0x49, 0x89, 0x8b, 0xcf, 0x31, 0x25, 0xc5, 0x31, 0x25, 0xa5, 0x28, 0x28, 0xb5, 0xb0, 0x34, 0xb5,
	0xb8, 0x44, 0x48, 0x80, 0x8b, 0x39, 0x31, 0x25, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08,
	0xc4, 0x54, 0x52, 0xe5, 0xe2, 0x87, 0xab, 0x29, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x12, 0xe2,
	0x62, 0x01, 0x69, 0x87, 0xaa, 0x02, 0xb3, 0x8d, 0x12, 0xb9, 0xb8, 0x41, 0x6a, 0x82, 0x53, 0x8b,
	0xca, 0x32, 0x93, 0x53, 0x85, 0x82, 0xb8, 0xd8, 0xa1, 0xba, 0x84, 0x14, 0xf5, 0x30, 0x2c, 0xd6,
	0x43, 0xb5, 0x55, 0x4a, 0x09, 0x9f, 0x12, 0x88, 0xa5, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x7f, 0x18,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x89, 0x21, 0x48, 0x4e, 0xe4, 0x00, 0x00, 0x00,
}
